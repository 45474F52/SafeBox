import 'package:flutter/material.dart';
import 'package:safebox/screen/start_screen.dart';
import 'package:safebox/screen/sync_screen.dart';
import 'package:safebox/services/security/password_storage.dart';
import 'package:safebox/services/security/verificator.dart';
import 'package:safebox/services/sync/synchronizer.dart';

class SettingsTab extends StatefulWidget {
  final PasswordStorage storage;
  final Synchronizer synchronizer;

  const SettingsTab({
    super.key,
    required this.storage,
    required this.synchronizer,
  });

  @override
  State<SettingsTab> createState() => _SettingsTabState();
}

class _SettingsTabState extends State<SettingsTab> {
  final Verificator _verificator = Verificator();
  late final PasswordStorage _storage;

  bool _biometricsEnabled = false;
  bool _autoLockEnabled = false;
  String _autoLockTime = '1 –º–∏–Ω—É—Ç–∞';

  final List<String> _lockOptions = const ['1 –º–∏–Ω—É—Ç–∞', '5 –º–∏–Ω—É—Ç', '15 –º–∏–Ω—É—Ç'];

  @override
  void initState() {
    super.initState();
    _storage = widget.storage;
  }

  @override
  Widget build(BuildContext context) {
    return SingleChildScrollView(
      padding: const EdgeInsets.all(16.0),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          const Text(
            '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è',
            style: TextStyle(fontSize: 22, fontWeight: FontWeight.bold),
          ),
          const SizedBox(height: 24),

          const Row(
            mainAxisSize: MainAxisSize.min,
            children: [
              Icon(Icons.shield),
              SizedBox(width: 8.0),
              Text(
                '–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å',
                style: TextStyle(fontWeight: FontWeight.w600),
              ),
            ],
          ),
          const Divider(),
          SwitchListTile(
            title: const Text('–ë–∏–æ–º–µ—Ç—Ä–∏—è'),
            subtitle: const Text('–†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –ø–æ –ª–∏—Ü—É –∏–ª–∏ –æ—Ç–ø–µ—á–∞—Ç–∫—É'),
            value: _biometricsEnabled,
            onChanged: (value) {
              setState(() {
                _biometricsEnabled = value;
              });
              if (value) {
                _showFeatureNotReady(() {
                  setState(() {
                    _biometricsEnabled = false;
                  });
                });
              }
            },
          ),
          SwitchListTile(
            title: const Text('–ê–≤—Ç–æ–±–ª–æ–∫–∏—Ä–æ–≤–∫–∞'),
            subtitle: const Text('–ó–∞–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø—Ä–∏ –±–µ–∑–¥–µ–π—Å—Ç–≤–∏–∏'),
            value: _autoLockEnabled,
            onChanged: (value) => setState(() => _autoLockEnabled = value),
          ),
          Visibility(
            visible: _autoLockEnabled,
            child: Padding(
              padding: const EdgeInsets.only(left: 24, top: 8, bottom: 8),
              child: DropdownButtonFormField<String>(
                key: ValueKey(_autoLockTime),
                initialValue: _autoLockTime,
                items: _lockOptions.map((time) {
                  return DropdownMenuItem(value: time, child: Text(time));
                }).toList(),
                onChanged: (String? value) {
                  if (value != null) {
                    setState(() {
                      _autoLockTime = value;
                    });
                  }
                },
                decoration: const InputDecoration(
                  labelText: '–í—Ä–µ–º—è –¥–æ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏',
                  border: OutlineInputBorder(),
                ),
              ),
            ),
          ),

          const SizedBox(height: 24),

          const Row(
            mainAxisSize: MainAxisSize.min,
            children: [
              Icon(Icons.storage),
              SizedBox(width: 8.0),
              Text('–•—Ä–∞–Ω–∏–ª–∏—â–µ', style: TextStyle(fontWeight: FontWeight.w600)),
            ],
          ),
          const Divider(),
          ListTile(
            title: const Text('–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è'),
            subtitle: const Text('–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø–∞—Ä–æ–ª–∏'),
            trailing: const Icon(Icons.sync_alt),
            onTap: () => Navigator.push(
              context,
              MaterialPageRoute(
                builder: (context) =>
                    SyncScreen(synchronizer: widget.synchronizer),
              ),
            ),
          ),
          const SizedBox(height: 8),
          ListTile(
            title: Text('–û—á–∏—Å—Ç–∏—Ç—å –¥–∞–Ω–Ω—ã–µ', style: TextStyle(color: Colors.red)),
            trailing: const Icon(Icons.delete, color: Colors.red),
            onTap: _confirmClearData,
          ),

          const SizedBox(height: 24),

          const Row(
            mainAxisSize: MainAxisSize.min,
            children: [
              Icon(Icons.info),
              SizedBox(width: 8.0),
              Text(
                '–û –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏',
                style: TextStyle(fontWeight: FontWeight.w600),
              ),
            ],
          ),
          const Divider(),
          const ListTile(title: Text('–í–µ—Ä—Å–∏—è'), subtitle: Text('SaveBox v1.0')),
          const ListTile(title: Text('–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫'), subtitle: Text('Diego')),
          const ListTile(title: Text('–õ–∏—Ü–µ–Ω–∑–∏—è'), subtitle: Text('MIT')),
        ],
      ),
    );
  }

  /// –í—Å–ø–ª—ã–≤–∞—é—â–µ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ: —Ñ—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ
  void _showFeatureNotReady([Function? continueWith]) {
    if (mounted) {
      const duration = Duration(seconds: 2);
      ScaffoldMessenger.of(context).showSnackBar(
        const SnackBar(
          content: Text('üîß –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –µ—â—ë –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ'),
          duration: duration,
        ),
      );
      if (continueWith != null) {
        Future.delayed(const Duration(seconds: 2), () {
          continueWith();
        });
      }
    }
  }

  void _confirmClearData() {
    showDialog(
      context: context,
      builder: (ctx) => AlertDialog(
        title: const Text('‚ö†Ô∏è –û—á–∏—Å—Ç–∏—Ç—å –≤—Å—ë?'),
        content: const Text(
          '–í—Å–µ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–µ –ø–∞—Ä–æ–ª–∏ –±—É–¥—É—Ç –±–µ–∑–≤–æ–∑–≤—Ä–∞—Ç–Ω–æ —É–¥–∞–ª–µ–Ω—ã. '
          '–í—ã —É–≤–µ—Ä–µ–Ω—ã?',
        ),
        actions: [
          TextButton(
            onPressed: () => Navigator.pop(ctx),
            child: const Text('–û—Ç–º–µ–Ω–∞'),
          ),
          TextButton(
            onPressed: () async {
              Navigator.pop(ctx);
              await _storage.clear();
              await _verificator.removeToken();
              if (mounted) {
                ScaffoldMessenger.of(context).showSnackBar(
                  const SnackBar(
                    content: Text('‚úÖ –í—Å–µ –¥–∞–Ω–Ω—ã–µ –æ—á–∏—â–µ–Ω—ã'),
                    duration: Duration(seconds: 2),
                  ),
                );
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (_) => StartScreen()),
                );
              }
            },
            child: const Text('–û—á–∏—Å—Ç–∏—Ç—å', style: TextStyle(color: Colors.red)),
          ),
        ],
      ),
    );
  }
}
